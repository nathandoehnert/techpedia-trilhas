name: Auto-Merge Approved PRs
on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: write
  pull-requests: write
  checks: write
  statuses: write

jobs:
  approve-and-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: hmarr/auto-approve-action@v4
        
      - name: Merge PR
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_MERGE_TOKEN }}
          MIN_VOTES: 5
        with:
          script: |
            const { data: reactions } = await github.rest.reactions.listForIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
            });
            
            const upvotes = reactions.filter(r => r.content === '+1').length;
            
            if (upvotes >= parseInt(process.env.MIN_VOTES)) {
              try {
                // MÃ©todo garantido para merge
                await github.request('POST /repos/{owner}/{repo}/merges', {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  base: context.payload.pull_request.base.ref,
                  head: context.payload.pull_request.head.ref,
                  commit_message: `Auto-merged PR #${context.payload.pull_request.number}`
                });
                
                // Fecha o PR
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  state: 'closed'
                });
              } catch (error) {
                core.error(`Merge failed: ${error}`);
                core.setFailed(error.message);
              }
            }
